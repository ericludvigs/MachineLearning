Traceback (most recent call last):
  File "/Users/mhjensen/miniforge3/envs/myenv/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/mhjensen/miniforge3/envs/myenv/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/mhjensen/miniforge3/envs/myenv/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/mhjensen/miniforge3/envs/myenv/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/mhjensen/miniforge3/envs/myenv/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/mhjensen/miniforge3/envs/myenv/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/mhjensen/miniforge3/envs/myenv/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/mhjensen/miniforge3/envs/myenv/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from tensorflow.keras import datasets, layers, models
from tensorflow.keras.layers import Input
from tensorflow.keras.models import Sequential      #This allows appending layers to existing models
from tensorflow.keras.layers import Dense           #This allows defining the characteristics of a particular layer
from tensorflow.keras import optimizers             #This allows using whichever optimiser we want (sgd,adam,RMSprop)
from tensorflow.keras import regularizers           #This allows using whichever regularizer we want (l1,l2,l1_l2)
from tensorflow.keras.utils import to_categorical   #This allows using categorical cross entropy as the cost function
#from tensorflow.keras import Conv2D
#from tensorflow.keras import MaxPooling2D
#from tensorflow.keras import Flatten

from sklearn.model_selection import train_test_split

# representation of labels
labels = to_categorical(labels)

# split into train and test data
# one-liner from scikit-learn library
train_size = 0.8
test_size = 1 - train_size
X_train, X_test, Y_train, Y_test = train_test_split(inputs, labels, train_size=train_size,
                                                    test_size=test_size)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNotFoundError[0m                             Traceback (most recent call last)
Cell [0;32mIn[3], line 1[0m
[0;32m----> 1[0m [38;5;28;01mfrom[39;00m [38;5;21;01mtensorflow[39;00m[38;5;21;01m.[39;00m[38;5;21;01mkeras[39;00m [38;5;28;01mimport[39;00m datasets, layers, models
[1;32m      2[0m [38;5;28;01mfrom[39;00m [38;5;21;01mtensorflow[39;00m[38;5;21;01m.[39;00m[38;5;21;01mkeras[39;00m[38;5;21;01m.[39;00m[38;5;21;01mlayers[39;00m [38;5;28;01mimport[39;00m Input
[1;32m      3[0m [38;5;28;01mfrom[39;00m [38;5;21;01mtensorflow[39;00m[38;5;21;01m.[39;00m[38;5;21;01mkeras[39;00m[38;5;21;01m.[39;00m[38;5;21;01mmodels[39;00m [38;5;28;01mimport[39;00m Sequential      [38;5;66;03m#This allows appending layers to existing models[39;00m

File [0;32m~/miniforge3/envs/myenv/lib/python3.9/site-packages/tensorflow/__init__.py:440[0m
[1;32m    438[0m _plugin_dir [38;5;241m=[39m _os[38;5;241m.[39mpath[38;5;241m.[39mjoin(_s, [38;5;124m'[39m[38;5;124mtensorflow-plugins[39m[38;5;124m'[39m)
[1;32m    439[0m [38;5;28;01mif[39;00m _os[38;5;241m.[39mpath[38;5;241m.[39mexists(_plugin_dir):
[0;32m--> 440[0m   [43m_ll[49m[38;5;241;43m.[39;49m[43mload_library[49m[43m([49m[43m_plugin_dir[49m[43m)[49m
[1;32m    441[0m   [38;5;66;03m# Load Pluggable Device Library[39;00m
[1;32m    442[0m   _ll[38;5;241m.[39mload_pluggable_device_library(_plugin_dir)

File [0;32m~/miniforge3/envs/myenv/lib/python3.9/site-packages/tensorflow/python/framework/load_library.py:151[0m, in [0;36mload_library[0;34m(library_location)[0m
[1;32m    148[0m     kernel_libraries [38;5;241m=[39m [library_location]
[1;32m    150[0m   [38;5;28;01mfor[39;00m lib [38;5;129;01min[39;00m kernel_libraries:
[0;32m--> 151[0m     [43mpy_tf[49m[38;5;241;43m.[39;49m[43mTF_LoadLibrary[49m[43m([49m[43mlib[49m[43m)[49m
[1;32m    153[0m [38;5;28;01melse[39;00m:
[1;32m    154[0m   [38;5;28;01mraise[39;00m [38;5;167;01mOSError[39;00m(
[1;32m    155[0m       errno[38;5;241m.[39mENOENT,
[1;32m    156[0m       [38;5;124m'[39m[38;5;124mThe file or folder to load kernel libraries from does not exist.[39m[38;5;124m'[39m,
[1;32m    157[0m       library_location)

[0;31mNotFoundError[0m: dlopen(/Users/mhjensen/miniforge3/envs/myenv/lib/python3.9/site-packages/tensorflow-plugins/libmetal_plugin.dylib, 0x0006): symbol not found in flat namespace '_TF_GetInputPropertiesList'
NotFoundError: dlopen(/Users/mhjensen/miniforge3/envs/myenv/lib/python3.9/site-packages/tensorflow-plugins/libmetal_plugin.dylib, 0x0006): symbol not found in flat namespace '_TF_GetInputPropertiesList'

